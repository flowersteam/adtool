{
  "experiment": {
    "name": "demo",
    "config": {
      "nb_iterations": 5,
      "nb_seeds": 2,
      "save_frequency": 1,
      "host": "local",
      "save_location": "http://expe-db-api:80",
      "discovery_saving_keys": []
    }
  },
  "system": {
    "name": "LeniaCPPN",
    "config": {
      "SX": 64,
      "SY": 64,
      "final_step": 200,
      "scale_init_state": 1,
      "version": "pytorch_fft"
    }
  },
  "explorer": {
    "name": "IMGEPExplorer",
    "config": {
      "behavior_map": "LeniaStatistics",
      "behavior_map_config": { "SX": 64, "SY": 64 },
      "equil_time": 1,
      "mutator": "specific",
      "mutator_config": {},
      "parameter_map": "LeniaParameterMap",
      "parameter_map_config": {
        "init_state_dim": [64, 64],
        "neat_config_str": "# The `NEAT` section specifies parameters particular to the NEAT algorithm\n# or the experiment itself.  This is the only required section.\n[NEAT]\nfitness_criterion = max\nfitness_threshold = 1\npop_size = 1\nno_fitness_termination = False\nreset_on_extinction = True\n\n[DefaultSpeciesSet]\ncompatibility_threshold = 3.0\n\n[DefaultStagnation]\nspecies_fitness_func = max\nmax_stagnation = 5\nspecies_elitism = 4\n\n[DefaultReproduction]\nelitism = 2\nsurvival_threshold = 0.2\n\n[SelfConnectionGenome]\nnum_inputs = 4\nnum_hidden = 2\nnum_outputs = 1\n\ninitial_connection = partial_direct 0.6\nfeed_forward = False\n\ncompatibility_disjoint_coefficient = 1.0\ncompatibility_weight_coefficient = 1.0\n\nconn_add_prob = 0.15\nconn_delete_prob = 0.1\nenabled_default = True\nenabled_mutate_rate = 0.01\nenabled_rate_to_false_add = 0\nenabled_rate_to_true_add = 0\n\nnode_add_prob = 0.15\nnode_delete_prob = 0.1\n\nactivation_default = random\nactivation_options = delphineat_sigmoid delphineat_gauss tanh sin\n# NB: we use only activations assuring outputs are between [-1,1]\nactivation_mutate_rate = 0.1\n\naggregation_default = sum\naggregation_options = sum\naggregation_mutate_rate = 0.0\n\nbias_init_type = \"gaussian\"\nbias_init_mean = 0.0\nbias_init_stdev = 0.1\nbias_max_value = 30.0\nbias_min_value = -30.0\nbias_replace_rate = 0.01\nbias_mutate_rate = 0.8\nbias_mutate_power = 0.01\n\nresponse_init_type = \"gaussian\"\nresponse_init_mean = 1.0\nresponse_init_stdev = 0.0\nresponse_max_value = 30.0\nresponse_min_value = -30.0\nresponse_replace_rate = 0.0\nresponse_mutate_rate = 0.1\nresponse_mutate_power = 0.01\n\nweight_other_init_type = \"gaussian\"\nweight_other_init_mean = 0.0\nweight_other_init_stdev = 1.0\nweight_other_max_value = 30.0\nweight_other_min_value = -30.0\nweight_other_replace_rate = 0.01\nweight_other_mutate_rate = 0.8\nweight_other_mutate_power = 0.01\n\nweight_self_init_type = \"gaussian\"\nweight_self_init_mean = 0.0\nweight_self_init_stdev = 1.0\nweight_self_max_value = 30.0\nweight_self_min_value = -30.0\nweight_self_replace_rate = 0.01\nweight_self_mutate_rate = 0.8\nweight_self_mutate_power = 0.01\n"
      }
    }
  },
  "input_wrappers": [],
  "output_representations": [],
  "callbacks": {},
  "logger_handlers": []
}
